// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Evt__Comments extends ethereum.Event {
  get params(): Evt__Comments__Params {
    return new Evt__Comments__Params(this);
  }
}

export class Evt__Comments__Params {
  _event: Evt__Comments;

  constructor(event: Evt__Comments) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get message(): string {
    return this._event.parameters[2].value.toString();
  }

  get date(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Evt__Contract__Deployed extends ethereum.Event {
  get params(): Evt__Contract__Deployed__Params {
    return new Evt__Contract__Deployed__Params(this);
  }
}

export class Evt__Contract__Deployed__Params {
  _event: Evt__Contract__Deployed;

  constructor(event: Evt__Contract__Deployed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get proposalName(): string {
    return this._event.parameters[2].value.toString();
  }

  get idea(): string {
    return this._event.parameters[3].value.toString();
  }

  get budgetInEth(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get expiryTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Evt__Contract__Update__Deployed extends ethereum.Event {
  get params(): Evt__Contract__Update__Deployed__Params {
    return new Evt__Contract__Update__Deployed__Params(this);
  }
}

export class Evt__Contract__Update__Deployed__Params {
  _event: Evt__Contract__Update__Deployed;

  constructor(event: Evt__Contract__Update__Deployed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get proposalName(): string {
    return this._event.parameters[2].value.toString();
  }

  get idea(): string {
    return this._event.parameters[3].value.toString();
  }

  get budgetInEth(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Evt__Donation extends ethereum.Event {
  get params(): Evt__Donation__Params {
    return new Evt__Donation__Params(this);
  }
}

export class Evt__Donation__Params {
  _event: Evt__Donation;

  constructor(event: Evt__Donation) {
    this._event = event;
  }

  get donatorAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Evt__Donation__Withdraw extends ethereum.Event {
  get params(): Evt__Donation__Withdraw__Params {
    return new Evt__Donation__Withdraw__Params(this);
  }
}

export class Evt__Donation__Withdraw__Params {
  _event: Evt__Donation__Withdraw;

  constructor(event: Evt__Donation__Withdraw) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get contractAdddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Evt__Fund__Withdrawed extends ethereum.Event {
  get params(): Evt__Fund__Withdrawed__Params {
    return new Evt__Fund__Withdrawed__Params(this);
  }
}

export class Evt__Fund__Withdrawed__Params {
  _event: Evt__Fund__Withdrawed;

  constructor(event: Evt__Fund__Withdrawed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Evt__Profit__Withdraw extends ethereum.Event {
  get params(): Evt__Profit__Withdraw__Params {
    return new Evt__Profit__Withdraw__Params(this);
  }
}

export class Evt__Profit__Withdraw__Params {
  _event: Evt__Profit__Withdraw;

  constructor(event: Evt__Profit__Withdraw) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Evt__Renewed extends ethereum.Event {
  get params(): Evt__Renewed__Params {
    return new Evt__Renewed__Params(this);
  }
}

export class Evt__Renewed__Params {
  _event: Evt__Renewed;

  constructor(event: Evt__Renewed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get renewedDate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class KickStarter__getProposedIdeaResultValue0Struct extends ethereum.Tuple {
  get proposalName(): string {
    return this[0].toString();
  }

  get idea(): string {
    return this[1].toString();
  }

  get details(): string {
    return this[2].toString();
  }

  get budgetInEth(): BigInt {
    return this[3].toBigInt();
  }

  get date(): BigInt {
    return this[4].toBigInt();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }
}

export class KickStarter extends ethereum.SmartContract {
  static bind(address: Address): KickStarter {
    return new KickStarter("KickStarter", address);
  }

  contractBalance(): BigInt {
    let result = super.call(
      "contractBalance",
      "contractBalance():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_contractBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "contractBalance",
      "contractBalance():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fundRaised(contractAddress: Address): BigInt {
    let result = super.call("fundRaised", "fundRaised(address):(uint256)", [
      ethereum.Value.fromAddress(contractAddress),
    ]);

    return result[0].toBigInt();
  }

  try_fundRaised(contractAddress: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fundRaised", "fundRaised(address):(uint256)", [
      ethereum.Value.fromAddress(contractAddress),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFundWanted(contractAddress: Address): BigInt {
    let result = super.call(
      "getFundWanted",
      "getFundWanted(address):(uint256)",
      [ethereum.Value.fromAddress(contractAddress)],
    );

    return result[0].toBigInt();
  }

  try_getFundWanted(contractAddress: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFundWanted",
      "getFundWanted(address):(uint256)",
      [ethereum.Value.fromAddress(contractAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProposedIdea(
    contractAddress: Address,
  ): KickStarter__getProposedIdeaResultValue0Struct {
    let result = super.call(
      "getProposedIdea",
      "getProposedIdea(address):((string,string,string,uint256,uint256,uint256))",
      [ethereum.Value.fromAddress(contractAddress)],
    );

    return changetype<KickStarter__getProposedIdeaResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getProposedIdea(
    contractAddress: Address,
  ): ethereum.CallResult<KickStarter__getProposedIdeaResultValue0Struct> {
    let result = super.tryCall(
      "getProposedIdea",
      "getProposedIdea(address):((string,string,string,uint256,uint256,uint256))",
      [ethereum.Value.fromAddress(contractAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<KickStarter__getProposedIdeaResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  projectOwner(): Address {
    let result = super.call("projectOwner", "projectOwner():(address)", []);

    return result[0].toAddress();
  }

  try_projectOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("projectOwner", "projectOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class CommentsCall extends ethereum.Call {
  get inputs(): CommentsCall__Inputs {
    return new CommentsCall__Inputs(this);
  }

  get outputs(): CommentsCall__Outputs {
    return new CommentsCall__Outputs(this);
  }
}

export class CommentsCall__Inputs {
  _call: CommentsCall;

  constructor(call: CommentsCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get message(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CommentsCall__Outputs {
  _call: CommentsCall;

  constructor(call: CommentsCall) {
    this._call = call;
  }
}

export class CreateProposalCall extends ethereum.Call {
  get inputs(): CreateProposalCall__Inputs {
    return new CreateProposalCall__Inputs(this);
  }

  get outputs(): CreateProposalCall__Outputs {
    return new CreateProposalCall__Outputs(this);
  }
}

export class CreateProposalCall__Inputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }

  get proposalName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get idea(): string {
    return this._call.inputValues[1].value.toString();
  }

  get details(): string {
    return this._call.inputValues[2].value.toString();
  }

  get budgetInEth(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateProposalCall__Outputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }
}

export class DonationCall extends ethereum.Call {
  get inputs(): DonationCall__Inputs {
    return new DonationCall__Inputs(this);
  }

  get outputs(): DonationCall__Outputs {
    return new DonationCall__Outputs(this);
  }
}

export class DonationCall__Inputs {
  _call: DonationCall;

  constructor(call: DonationCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DonationCall__Outputs {
  _call: DonationCall;

  constructor(call: DonationCall) {
    this._call = call;
  }
}

export class PauseContractCall extends ethereum.Call {
  get inputs(): PauseContractCall__Inputs {
    return new PauseContractCall__Inputs(this);
  }

  get outputs(): PauseContractCall__Outputs {
    return new PauseContractCall__Outputs(this);
  }
}

export class PauseContractCall__Inputs {
  _call: PauseContractCall;

  constructor(call: PauseContractCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class PauseContractCall__Outputs {
  _call: PauseContractCall;

  constructor(call: PauseContractCall) {
    this._call = call;
  }
}

export class RenewProposalCall extends ethereum.Call {
  get inputs(): RenewProposalCall__Inputs {
    return new RenewProposalCall__Inputs(this);
  }

  get outputs(): RenewProposalCall__Outputs {
    return new RenewProposalCall__Outputs(this);
  }
}

export class RenewProposalCall__Inputs {
  _call: RenewProposalCall;

  constructor(call: RenewProposalCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RenewProposalCall__Outputs {
  _call: RenewProposalCall;

  constructor(call: RenewProposalCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateProposalCall extends ethereum.Call {
  get inputs(): UpdateProposalCall__Inputs {
    return new UpdateProposalCall__Inputs(this);
  }

  get outputs(): UpdateProposalCall__Outputs {
    return new UpdateProposalCall__Outputs(this);
  }
}

export class UpdateProposalCall__Inputs {
  _call: UpdateProposalCall;

  constructor(call: UpdateProposalCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get proposalName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get idea(): string {
    return this._call.inputValues[2].value.toString();
  }

  get details(): string {
    return this._call.inputValues[3].value.toString();
  }

  get budgetInEth(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class UpdateProposalCall__Outputs {
  _call: UpdateProposalCall;

  constructor(call: UpdateProposalCall) {
    this._call = call;
  }
}

export class WithdrawDonationCall extends ethereum.Call {
  get inputs(): WithdrawDonationCall__Inputs {
    return new WithdrawDonationCall__Inputs(this);
  }

  get outputs(): WithdrawDonationCall__Outputs {
    return new WithdrawDonationCall__Outputs(this);
  }
}

export class WithdrawDonationCall__Inputs {
  _call: WithdrawDonationCall;

  constructor(call: WithdrawDonationCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawDonationCall__Outputs {
  _call: WithdrawDonationCall;

  constructor(call: WithdrawDonationCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}

export class WithdrawProfitCall extends ethereum.Call {
  get inputs(): WithdrawProfitCall__Inputs {
    return new WithdrawProfitCall__Inputs(this);
  }

  get outputs(): WithdrawProfitCall__Outputs {
    return new WithdrawProfitCall__Outputs(this);
  }
}

export class WithdrawProfitCall__Inputs {
  _call: WithdrawProfitCall;

  constructor(call: WithdrawProfitCall) {
    this._call = call;
  }
}

export class WithdrawProfitCall__Outputs {
  _call: WithdrawProfitCall;

  constructor(call: WithdrawProfitCall) {
    this._call = call;
  }
}
